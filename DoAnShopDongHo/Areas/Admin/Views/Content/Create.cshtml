@model KetNoiCSDL.EF.Content

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@section jsFooter{
    <script>
        /*$('#SelectImage').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.SelectActionFunction = function (url) {
                $('#txtImage').val(url);
            };
            finder.popup();
        })*/
        
        var editor = CKEDITOR.replace('txtContent', {
            customConfig: '/Assets/Admin/js/plugins/ckeditor/config.js',
        });
    </script>
}
@section UploadImage{
    <script>
        $(function () {
            // đăng ký sự kiện click nút upload
            $('#SelectImage').click(function () {
                $('#fileUpload').trigger('click');
            })
            //Bắt sự kiện cảu change data của fileUpload
            $('#fileUpload').change(function () {
                // kiểm tra trình duyệt có hỗ trợ FormData object hay không
                // !== là phép so sánh tuyệt đối
                if (window.FormData !== undefined) {
                    // lấy dữ liệu rên file Upload
                    var fileUpload = $('#fileUpload').get(0); // get(0) lấy control đầu tiên
                    var files = fileUpload.files;//lấy các tập tin trên đó
                    // tạo đối tượng formdata
                    var formData = new FormData();
                    // đưa dữ liệu vào form
                    formData.append('file', files[0]);// lấy đầu tiên tropng tập tin khi upload 1 thì chỉ nhận đc 1
                    //Post lên server
                    $.ajax({
                        type: 'POST',
                        url: '/Admin/Content/UploadImage',
                        contentType: false, // không có header
                        processData: false, //không sử lý dữ liệu
                        data: formData,
                        success: function (url) {
                            $('#txtImage').val(url);
                        }
                        , error: function (err) {
                            alert('có lỗi khi upload: ' + err.statusText);
                        }
                    });
                }
            })
        })
    </script>
    }

<h2>Create</h2>

@using (Html.BeginForm("Create", "Content", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Content</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MetaTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.MetaTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" }, @id = "txtImage" })
                <input type="file" id="fileUpload" accept="image/*" name="fileUplad" style="display:none" /> <!--Hiển thị hộp thoại thư mục từ máy tính-->
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                <input type="button" id="SelectImage" class="btn btn-secondary" value="..." />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryID, null, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Detail, new { htmlAttributes = new { @class = "form-control" }, @id = "txtContent" })
                @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Tags, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
